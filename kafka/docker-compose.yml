# https://hub.docker.com/r/apache/kafka

services:
  broker:
    image: apache/kafka:4.0.0
    container_name: broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://broker:9092,CONTROLLER://broker:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    ports:
      - 9092:9092
    networks:
      - sakila_net

  connect:
    image: apache/kafka:4.0.0
    container_name: connect
    command:
      [
        "/opt/kafka/bin/connect-distributed.sh",
        "/opt/kafka/config/connect-distributed.properties",
      ]
    volumes:
      - ./connect/config:/opt/kafka/config:ro
      - ./connect/plugins:/opt/kafka/plugins:ro
      - ./connect/pipelines:/opt/kafka/pipelines:ro
    ports:
      - 8083:8083
    depends_on:
      - broker
    networks:
      - sakila_net

  # akhq:
  #   image: tchiotludo/akhq
  #   hostname: akhq
  #   container_name: akhq
  #   restart: unless-stopped
  #   environment:
  #     AKHQ_CONFIGURATION: |
  #       akhq:
  #         connections:
  #           docker-kafka-server:
  #             properties:
  #               bootstrap.servers: "broker:29092"
  #   depends_on:
  #     - broker
  #   ports:
  #     - 18080:8080
  #   networks:
  #     - sakila_net

networks:
  sakila_net:
    name: sakila_net
    external: true
